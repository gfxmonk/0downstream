from __future__ import print_function
import sys, os, subprocess, shutil
path = os.path

project_id, = sys.argv[1:]

BUILD_ROOT = path.join(os.environ['BUILDDIR'], project_id)
DEST_ROOT = path.join(os.environ['DISTDIR'], project_id)

os.chdir(BUILD_ROOT)

print("Running `npm build .` from %s" % (BUILD_ROOT,))
subprocess.check_call([os.environ['NPM'], 'build', '.'])

print("Build successful, copying files to %s" % (DEST_ROOT,))
shutil.copytree(BUILD_ROOT, path.join(os.environ['DISTDIR'], project_id), symlinks=True)

def ro_rmtree(root):
	"""
	From zeroinstall.support
	"""
	import shutil
	import platform
	if (os.getcwd() + os.path.sep).startswith(root + os.path.sep):
		import warnings
		warnings.warn("Removing tree ({tree}) containing the current directory ({cwd}) - this will not work on Windows".format(cwd = os.getcwd(), tree = root), stacklevel = 2)

	if os.path.isfile(root):
		os.chmod(root, 0o700)
		os.remove(root)
	else:
		if platform.system() == 'Windows':
			for main, dirs, files in os.walk(root):
				for i in files + dirs:
					os.chmod(os.path.join(main, i), 0o700)
			os.chmod(root, 0o700)
		else:
			for main, dirs, files in os.walk(root):
				os.chmod(main, 0o700)
		shutil.rmtree(root)

# remove some common unnecessary files
os.chdir(DEST_ROOT)
for item in ('src', 'test', 'deps'):
	if path.exists(item):
		ro_rmtree(item)
